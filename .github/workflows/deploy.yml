---
"on": push

name: Deploy

concurrency:
  group: terraform-deploy
  cancel-in-progress: false

env:
  # renovate: datasource=github-releases packageName=opentofu/opentofu
  OPENTOFU_VERSION: 1.9.1
  # renovate: datasource=github-releases packageName=gruntwork-io/terragrunt
  TERRAGRUNT_VERSION: 0.81.8
  WORKING_DIRECTORY: terraform

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: write
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - uses: taiki-e/install-action@just

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.OPENTOFU_VERSION }}

      - name: Install Terragrunt
        run: |
          wget -qO /tmp/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
          sudo install -m 755 /tmp/terragrunt /usr/local/bin/terragrunt

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.event_name }}-${{ github.run_id }}-${{ github.job }}
          aws-region: ca-central-1

      - name: Plan
        run: just terraform/plan

      - name: Generate Pull Request Comments
        # if: github.event_name == 'pull_request'
        run: |
          for file in $(ls terraform/plans); do
            project="terraform/$(tr '_' '/' <<< "$file" | cut -d. -f1)"
            
            pushd "$project" > /dev/null
            tofu show -json "$file" > "$file.json"
            popd > /dev/null

            if jq --exit-status '.resource_changes | map(.change.actions == ["no-op"]) | all' "$file.json"; then
              echo "No changes for $project"
              continue
            fi

            echo "Changes detected for $project"
          done

  apply:
    name: Apply
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.event_name }}-${{ github.run_id }}-${{ github.job }}
          aws-region: ca-central-1

      - uses: gruntwork-io/terragrunt-action@v2
        with:
          tofu_version: ${{ env.OPENTOFU_VERSION }}
          tg_version: ${{ env.TERRAGRUNT_VERSION }}
          tg_dir: ${{ env.WORKING_DIRECTORY }}
          tg_command: run-all apply
