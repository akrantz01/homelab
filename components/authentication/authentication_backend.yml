##
## Authentication Backend Provider Configuration
##
## Used for verifying user passwords and retrieve information such as email address and groups users belong to.
##
## The available providers are: `file`, `ldap`. You must use only one of these providers.
authentication_backend:
  ## Password Reset Options.
  password_reset:
    ## Disable both the HTML element and the API for reset password functionality.
    disable: false

    ## External reset password url that redirects the user to an external reset portal. This disables the internal reset
    ## functionality.
    # Set via environment variable AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_CUSTOM_URL
    #custom_url: ''

  ## The amount of time to wait before we refresh data from the authentication backend in the duration common syntax.
  ## To disable this feature set it to 'disable', this will slightly reduce security because for Authelia, users will
  ## always belong to groups they belonged to at the time of login even if they have been removed from them in LDAP.
  ## To force update on every request you can set this to '0' or 'always', this will increase processor demand.
  ## See the below documentation for more information.
  ## Refresh Interval docs: https://www.authelia.com/c/1fa#refresh-interval
  refresh_interval: 5 minutes

  ##
  ## LDAP (Authentication Provider)
  ##
  ## This is the recommended Authentication Provider in production
  ## because it allows Authelia to offload the stateful operations
  ## onto the LDAP service.
  ldap:
    ## The address of the directory server to connect to in the address common syntax.
    ## Format: [<scheme>://]<hostname>[:<port>].
    ## Square brackets indicate optional portions of the format. Scheme must be 'ldap', 'ldaps', or 'ldapi`.
    ## The default scheme is 'ldapi' if the address is an absolute path otherwise it's 'ldaps'.
    ## The default port is '636', unless the scheme is 'ldap' in which case it's '389'.
    # Set via environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS
    #address: 'ldaps://127.0.0.1:636'

    ## The LDAP implementation, this affects elements like the attribute utilised for resetting a password.
    ## Acceptable options are as follows:
    ## - 'activedirectory' - for Microsoft Active Directory.
    ## - 'freeipa' - for FreeIPA.
    ## - 'lldap' - for lldap.
    ## - 'custom' - for custom specifications of attributes and filters.
    ## This currently defaults to 'custom' to maintain existing behaviour.
    ##
    ## Depending on the option here certain other values in this section have a default value, notably all of the
    ## attribute mappings have a default value that this config overrides, you can read more about these default values
    ## at https://www.authelia.com/c/ldap#defaults
    # Set via environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION
    #implementation: 'custom'

    ## The dial timeout for LDAP in the duration common syntax.
    timeout: 5 seconds

    ## Use StartTLS with the LDAP connection.
    start_tls: false

    tls:
      ## The server subject name to check the servers certificate against during the validation process.
      ## This option is not required if the certificate has a SAN which matches the address options hostname.
      # Set via environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TLS_SERVER_NAME
      #server_name: 'ldap.example.com'

      ## Skip verifying the server certificate entirely. In preference to setting this we strongly recommend you add the
      ## certificate or the certificate of the authority signing the certificate to the certificates directory which is
      ## defined by the `certificates_directory` option at the top of the configuration.
      ## It's important to note the public key should be added to the directory, not the private key.
      ## This option is strongly discouraged but may be useful in some self-signed situations where validation is not
      ## important to the administrator.
      skip_verify: false

      ## Minimum TLS version for the connection.
      minimum_version: TLS1.2

      ## Maximum TLS version for the connection.
      maximum_version: TLS1.3

    ## The distinguished name of the container searched for objects in the directory information tree.
    ## See also: additional_users_dn, additional_groups_dn.
    # Set via environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN
    #base_dn: 'dc=example,dc=com'

    ## The additional_users_dn is prefixed to base_dn and delimited by a comma when searching for users.
    ## i.e. with this set to OU=Users and base_dn set to DC=a,DC=com; OU=Users,DC=a,DC=com is searched for users.
    # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN
    additional_users_dn: ou=Users

    ## The users filter used in search queries to find the user profile based on input filled in login form.
    ## Various placeholders are available in the user filter which you can read about in the documentation which can
    ## be found at: https://www.authelia.com/c/ldap#users-filter-replacements
    ##
    ## Recommended settings are as follows:
    ## - Microsoft Active Directory: (&({username_attribute}={input})(objectCategory=person)(objectClass=user))
    ## - OpenLDAP:
    ##   - (&({username_attribute}={input})(objectClass=person))
    ##   - (&({username_attribute}={input})(objectClass=inetOrgPerson))
    ##
    ## To allow sign in both with username and email, one can use a filter like
    ## (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER
    users_filter: (&({username_attribute}={input})(objectClass=inetOrgPerson))

    ## The additional_groups_dn is prefixed to base_dn and delimited by a comma when searching for groups.
    ## i.e. with this set to OU=Groups and base_dn set to DC=a,DC=com; OU=Groups,DC=a,DC=com is searched for groups.
    # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN
    additional_groups_dn: ou=Groups

    ## The groups filter used in search queries to find the groups based on relevant authenticated user.
    ## Various placeholders are available in the groups filter which you can read about in the documentation which can
    ## be found at: https://www.authelia.com/c/ldap#groups-filter-replacements
    ##
    ## If your groups use the `groupOfUniqueNames` structure use this instead:
    ##    (&(uniqueMember={dn})(objectClass=groupOfUniqueNames))
    # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER
    groups_filter: (member={dn})

    ## The group search mode to use. Options are 'filter' or 'memberof'. It's essential to read the docs if you wish to
    ## use 'memberof'. Also 'filter' is the best choice for most use cases.
    # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUP_SEARCH_MODE
    group_search_mode: filter

    ## Follow referrals returned by the server.
    ## This is especially useful for environments where read-only servers exist. Only implemented for write operations.
    permit_referrals: false

    ## The username and password of the admin user.
    # Set via environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER
    #user: 'cn=admin,dc=example,dc=com'
    ## Password can also be set using a secret: https://www.authelia.com/c/secrets
    # Set via secret environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
    #password: 'password'

    ## The attributes for users and objects from the directory server.
    attributes:

      ## The distinguished name attribute if your directory server supports it. Users should read the docs before
      ## configuring. Only used for the 'memberof' group search mode.
      # distinguished_name: ''

      ## The attribute holding the username of the user. This attribute is used to populate the username in the session
      ## information. For your information, Microsoft Active Directory usually uses 'sAMAccountName' and OpenLDAP
      ## usually uses 'uid'. Beware that this attribute holds the unique identifiers for the users binding the user and
      ## the configuration stored in database; therefore only single value attributes are allowed and the value must
      ## never be changed once attributed to a user otherwise it would break the configuration for that user.
      ## Technically non-unique attributes like 'mail' can also be used but we don't recommend using them, we instead
      ## advise to           use a filter to perform alternative lookups and the attributes mentioned above
      ## (sAMAccountName and uid) to follow https://datatracker.ietf.org/doc/html/rfc2307.
      # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_USERNAME
      username: uid

      ## The attribute holding the display name of the user. This will be used to greet an authenticated user.
      # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_DISPLAY_NAME
      display_name: displayName

      ## The attribute holding the mail address of the user. If multiple email addresses are defined for a user, only
      ## the first one returned by the directory server is used.
      # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_MAIL
      mail: mail

      ## The attribute which provides distinguished names of groups an object is a member of.
      ## Only used for the 'memberof' group search mode.
      # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_MEMBER_OF
      member_of: memberOf

      ## The attribute holding the name of the group.
      # Overridden by environment variable AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_GROUP_NAME
      group_name: cn
